using CUDNN backend
usage: train.py [-h] [-b batch_size] [-m max_epochs]
                [--nb-channels nb_channels] [--crop-size crop_size]
                [--train-file train_file] [--test-file test_file]
                [--activation activation] [--learning-init learning_init]
                [--learning-final learning_final] [-p patience]
                [--lambda2 lambda2] [-l load] [-d data_augmentation]
                [-t max_trans] [-z scale_delta] [-a angle_factor]
                [-f final_ratio]
                network

Neural net. training

optional arguments:
  -h, --help            show this help message and exit

General:
  network               Network name (should be defined in the model zoo).
  -b batch_size, --batch-size batch_size
                        Batch size (27, 49, 63, 81, 147 -> no lost pic.)
                        (default: 49)
  -m max_epochs, --max-epochs max_epochs
                        Minimum distance value (default: 100)
  --nb-channels nb_channels
                        Number of color channels (3 for RGB) (default: 3)
  --crop-size crop_size
                        Pictures batch data augmentation crop size. (default:
                        200)
  --train-file train_file
                        Training set file. (default: train.npz)
  --test-file test_file
                        Test set file. (default: test.npz)
  --activation activation
                        Activation function (rectify, leaky_rectify, etc.)
                        (default: rectify)
  --learning-init learning_init
                        Initial learning rate of Nesterov momentum method
                        (default: 0.01)
  --learning-final learning_final
                        Final learning rate of Nesterov momentum method
                        (default: 0.0001)
  -p patience, --patience patience
                        Early stopping patience (default: 5)
  --lambda2 lambda2     Lambda2 regularization term (default: 0.0005)
  -l load, --load load  Model to load (leave blank for none) (default: None)

Data augmentation:
  -d data_augmentation, --data-augmentation data_augmentation
                        Batch data augmentation type (default: resampling)
  -t max_trans, --max-trans max_trans
                        Maximum translation in number of pixels (default: 5)
  -z scale_delta, --scale-delta scale_delta
                        Zooming scale (e.g. 0.1 for 0.9 -> 1.1 rescaling)
                        (default: 0.1)
  -a angle_factor, --angle-factor angle_factor
                        Rotation factor (0 for no rot. and 1 for 360 deg.)
                        (default: 1.0)
  -f final_ratio, --final-ratio final_ratio
                        Batch over sampling final ratio (only relevant for
                        resampling data-aug) (default: 2.0)
