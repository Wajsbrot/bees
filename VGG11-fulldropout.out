using CUDNN backend
Train:
X.shape: (3952, 3, 200, 200)
y.shape: (3952,)
y value counts:  [ 824 3128]
pictures size:  1.0
Labels ratio: 3.80
Input arguments: {'load': None, 'scale_delta': 0.1, 'test_file': 'test.npz', 'network': 'VGG11-fulldropout', 'data_augmentation': 'resampling-flip', 'final_ratio': 1.5, 'activation_function': <function rectify at 0x7f17dbd89cf8>, 'train_file': 'train.npz', 'activation': 'rectify', 'max_trans': 5, 'batch_size': 52, 'dataset_ratio': 3.796116504854369, 'patience': 10, 'angle_factor': 1.0, 'learning_init': 0.005, 'learning_final': 0.0001, 'max_epochs': 200, 'initial_ratio': None, 'nb_channels': 3, 'lambda2': 0.0, 'crop_size': 200}
# Neural Network with 28622210 learnable parameters

## Layer information

name            size           total    cap.Y    cap.X    cov.Y    cov.X    filter Y    filter X    field Y    field X
--------------  -----------  -------  -------  -------  -------  -------  ----------  ----------  ---------  ---------
input0          3x200x200     120000   100.00   100.00   100.00   100.00         200         200        200        200
conv2ddnn1      64x200x200   2560000   100.00   100.00     1.50     1.50           3           3          3          3
maxpool2ddnn2   64x100x100    640000   100.00   100.00     1.50     1.50           3           3          3          3
dropout3        64x100x100    640000   100.00   100.00   100.00   100.00         200         200        200        200
conv2ddnn4      128x100x100  1280000   100.00   100.00   100.00   100.00         200         200        200        200
maxpool2ddnn5   128x50x50     320000   100.00   100.00   100.00   100.00         200         200        200        200
dropout6        128x50x50     320000   100.00   100.00   100.00   100.00         200         200        200        200
conv2ddnn7      256x50x50     640000   100.00   100.00   100.00   100.00         200         200        200        200
conv2ddnn8      256x50x50     640000   100.00   100.00   100.00   100.00         200         200        200        200
maxpool2ddnn9   256x25x25     160000   100.00   100.00   100.00   100.00         200         200        200        200
dropout10       256x25x25     160000   100.00   100.00   100.00   100.00         200         200        200        200
conv2ddnn11     512x25x25     320000   100.00   100.00   100.00   100.00         200         200        200        200
conv2ddnn12     512x25x25     320000   100.00   100.00   100.00   100.00         200         200        200        200
maxpool2ddnn13  512x12x12      73728   100.00   100.00   100.00   100.00         200         200        200        200
dropout14       512x12x12      73728   100.00   100.00   100.00   100.00         200         200        200        200
conv2ddnn15     512x12x12      73728   100.00   100.00   100.00   100.00         200         200        200        200
conv2ddnn16     512x12x12      73728   100.00   100.00   100.00   100.00         200         200        200        200
maxpool2ddnn17  512x6x6        18432   100.00   100.00   100.00   100.00         200         200        200        200
dropout18       512x6x6        18432   100.00   100.00   100.00   100.00         200         200        200        200
dense19         1024            1024   100.00   100.00   100.00   100.00         200         200        200        200
featurepool20   512              512   100.00   100.00   100.00   100.00         200         200        200        200
dropout21       512              512   100.00   100.00   100.00   100.00         200         200        200        200
dense22         1024            1024   100.00   100.00   100.00   100.00         200         200        200        200
featurepool23   512              512   100.00   100.00   100.00   100.00         200         200        200        200
dense24         2                  2   100.00   100.00   100.00   100.00         200         200        200        200

Explanation
    X, Y:    image dimensions
    cap.:    learning capacity
    cov.:    coverage of image
    [35mmagenta[0m: capacity too low (<1/6)
    [36mcyan[0m:    image coverage too high (>100%)
    [31mred[0m:     capacity too low and coverage too high


  epoch    train loss    valid loss    train/val    valid acc    AUC-ROC  dur
-------  ------------  ------------  -----------  -----------  ---------  -------
      1       [36m0.71101[0m       [32m0.65604[0m      1.08378      0.68685    0.66686  217.04s
      2       [36m0.66766[0m       [32m0.63925[0m      1.04445      0.68294    0.80966  217.00s
      3       [36m0.62739[0m       0.69814      0.89865      0.43685    0.78532  217.03s
      4       [36m0.58138[0m       0.76256      0.76240      0.31315    0.77118  216.84s
      5       [36m0.56848[0m       0.77425      0.73424      0.31315    0.81436  216.83s
      6       0.57335       0.84906      0.67528      0.31315    0.75282  216.90s
      7       [36m0.53478[0m       0.91734      0.58297      0.31315    0.73967  216.82s
      8       [36m0.51640[0m       0.99787      0.51750      0.31315    0.76270  216.79s
      9       [36m0.49970[0m       1.09617      0.45586      0.31315    0.75421  216.83s
     10       [36m0.49170[0m       1.07673      0.45666      0.31315    0.73788  216.79s
     11       [36m0.47303[0m       1.06578      0.44383      0.31315    0.82674  216.80s
     12       0.48095       1.10529      0.43514      0.31315    0.64653  216.88s
